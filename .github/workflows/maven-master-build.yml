# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build, Deploy, and Tag Master branch

on:
  push:
    branches:
      - master

jobs:
  Release_Master:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        os: ['windows']
        jdk: [ '1.8' ]

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Clone the source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      # FIXME: Reminder to restore all 'mvn' to './mvnw' in real PK-Bridge
      # FIXME: Also '-s .mvn/wrapper/settings.xml'
#      - name: File System preparation
#        run: |
#          chmod 755 mvnw

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-

      - name: Set up cache for NSIS v2.46
        id: cache_NSIS
        uses: actions/cache@v2
        with:
          path: C:\Program Files (x86)\NSIS
          key: ${{ matrix.os }}-nsis

      # $MASTER_VERSION should be <project.version> without "-SNAPSHOT", eg "1.3.0-SNAPSHOT" would be "1.3.0".
      - name: Calculate Master Version
        run: |
          $MASTER_VERSION=(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout).Trim("-SNAPSHOT")
          echo "Master branch will be tagged $MASTER_VERSION after completion."
          echo "Master_Version=$MASTER_VERSION" >> $env:GITHUB_ENV

      # Required for Bridge to build via Maven
#      - name: Checkout config files before maven build
#        uses: actions/checkout@master
#        with:
#          repository: 'hcapatientkeeper/MOB_8_2_CONFIG'
#          token: ${{ secrets.ORG_GHTOKEN }}
#          path: config

      # Build Master branch
      - name: Build Master ${{ env.Master_Version }} with Maven
        # FIXME: Change this from install to deploy.
        # Update version.txt file to allow users to quickly determine Bridge version.
        #          echo "${{ env.Master_Version }}" > bridge-backend/meditechConfig/version.txt
        run: |
          mvn versions:set -DnewVersion="${{ env.Master_Version }}" versions:commit
          mvn --batch-mode clean install

      # Required for Bridge to build *.exe installer
#      - name: Install NSIS if not cached
#        if: steps.cache_NSIS.outputs.cache-hit != 'true'
#        run: |
#          [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12
#          choco install nsis.install --version=2.46 -y -dv

      # This step overwrites parts of the NSIS program with PK specific code.  I don't know what exactly.
#      - name: Extract NSIS log if not cached
#        if: steps.cache_NSIS.outputs.cache-hit != 'true'
#        run: |
#          echo "$(pwd)"
#          7z.exe x "D:\a\pk-bridge\pk-bridge\bridge-build\nsis-2.46-log.zip" -o"C:\Program Files (x86)\NSIS" -y -r
#          cd "D:\a\pk-bridge\pk-bridge"
#          echo "$(pwd)"
#          dir

      # Create Bridge.zip and Bridge.exe
#      - name: Create Bridge installer
#        run: |
#          & 'C:\Program Files (x86)\NSIS\makensis.exe' /DMIM_FILENAME="D:\a\pk-bridge\pk-bridge\bridge-build\bridge.zip" /DVERSION_NUMBER="${{ env.Master_Version }}" /DPRODUCT_VERSION="${{ env.Master_Version }}" "D:\a\pk-bridge\pk-bridge\installer\bridge\bridge.nsi"

      # Copy zip and exe files to staging. Add version number to .exe file.
      # Then upload them to GitHub via deploy.
#      - name: Copy and Upload Bridge zip, exe, and setupexe via Maven
#        run: |
#           mkdir staging
#           copy "D:/a/pk-bridge/pk-bridge/bridge-build/*.zip" staging
#           copy "D:/a/pk-bridge/pk-bridge/installer/bridge/*.exe" staging
#           copy "D:\a\pk-bridge\pk-bridge\installer\bridge\bridgesetup-${{ env.Master_Version }}.exe" "D:\a\pk-bridge\pk-bridge\staging\bridge.exe"
#           ./mvnw --batch-mode -f "uploadzip.xml" clean deploy -Drevision="${{ env.Master_Version }}" -s .mvn/wrapper/settings.xml
#           ./mvnw --batch-mode -f "uploadexe.xml" clean deploy -Drevision="${{ env.Master_Version }}" -s .mvn/wrapper/settings.xml
#           ./mvnw --batch-mode -f "uploadsetupexe.xml" clean deploy -Drevision="${{ env.Master_Version }}" -s .mvn/wrapper/settings.xml

      - name: Tag Master branch build as ${{ env.Master_Version }}
        uses: mathieudutour/github-tag-action@v5.2
        with:
          # FIXME: github_token: ${{ secrets.ORG_GHTOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ env.Master_Version }}
          tag_prefix: ''