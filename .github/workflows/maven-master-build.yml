# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build for Master branch

on:
  workflow_dispatch:

  push:
    branches:
      - master

jobs:
  Setup_Build:
    runs-on: windows-latest

    strategy:
      fail-fast: false
      matrix:
        os: ['windows']
        jdk: [ '1.8' ]

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Clone the source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      # FIXME: Reminder to restore all 'mvn' to './mvnw' in real PK-Bridge
      # FIXME: Also '-s .mvn/wrapper/settings.xml'
#      - name: File System preparation
#        run: |
#          chmod 755 mvnw

      - name: Set up cache for ~./m2/repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ matrix.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ matrix.os }}-

      # Get the Develop tag for next_version calculations
      - name: Get Develop version tag being merged into Master
        id: get_develop_version
        run: |
          $DEVELOP_TAG=git describe --tags --abbrev=0 "origin/develop"
          echo "DEVELOP_TAG = $DEVELOP_TAG"
          echo "::set-output name=develop-version-tag::$DEVELOP_TAG"

      # Get the Develop qualifier so we can bump the Develop version later
      # eg, 1.0.245-d20220513_1553.abcdef should return d20220513_1553.abcdef
      - name: Get Develop qualifier tag
        id: get_develop_qualifier
        run: |
          $DEVELOP_TAG="${{ steps.get_develop_version.outputs.develop-version-tag }}"
          $QUALIFIER=mvn build-helper:parse-version -D"version.version"=$DEVELOP_TAG help:evaluate -Dexpression="parsedVersion.qualifier" -q -DforceStdout
          echo "QUALIFIER = $QUALIFIER"
          echo "::set-output name=develop-qualifier-tag::$QUALIFIER"

      # Get next semantic build tag number
      - name: Get next Master version
        id: get_next_master_version
        run: |
          $MASTER_TAG=git describe --tags --abbrev=0
          $MAJOR=mvn build-helper:parse-version -D"version.version"=$MASTER_TAG help:evaluate -Dexpression="parsedVersion.majorVersion" -q -DforceStdout
          $NEXT_MINOR=mvn build-helper:parse-version -D"version.version"=$MASTER_TAG help:evaluate -Dexpression="parsedVersion.nextMinorVersion" -q -DforceStdout
          $NEXT_MASTER_VERSION=$MAJOR+'.'+$NEXT_MINOR+'.0'
          echo "NEXT_MASTER_VERSION = $NEXT_MASTER_VERSION"
          echo "::set-output name=next-master-version-tag::$NEXT_MASTER_VERSION"

      # Required for Bridge to build *.exe installer
#      - name: Install NSIS
#        run: |
#         choco install nsis.install --version=2.46 -y

      # Required for Bridge to build via Maven
#      - name: Checkout config files before maven build
#        uses: actions/checkout@master
#        with:
#          repository: 'hcapatientkeeper/MOB_8_2_CONFIG'
#          token: ${{ secrets.ORG_GHTOKEN }}
#          path: config

      # Display the version numbers for both Master and the Develop build being merged into Master.
      - name: Print Version build numbers
        run: |
          echo "Develop build being merged into Master is ${{ steps.get_develop_version.outputs.develop-version-tag }}"
          echo "Master branch will be tagged ${{ steps.get_next_master_version.outputs.next-master-version-tag }} after completion."
          echo "Develop will be bumped to ${{ steps.get_next_master_version.outputs.next-master-version-tag }}-${{ steps.get_develop_qualifier.outputs.develop-qualifier-tag }}"
          
      # View Bridge version at a glance on bridge server
#      - name: Update version.txt
#        run: |
#          echo "${{ steps.get_next_master_version.outputs.next-master-version-tag }}" > bridge-backend/meditechConfig/version.txt

      # Build Master branch
      - name: Build Master with Maven
        # FIXME: Change this from install to deploy.
        run: |
          mvn versions:set -DnewVersion="${{ steps.get_next_master_version.outputs.next-master-version-tag }}"
          mvn --batch-mode clean install

      - name: Tag Master branch build as ${{ steps.get_next_master_version.outputs.next-master-version-tag }}
        if: always()
        id: tag_version_master
        uses: mathieudutour/github-tag-action@v5.2
        with:
          # FIXME: github_token: ${{ secrets.ORG_GHTOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.get_next_master_version.outputs.next-master-version-tag }}
          tag_prefix: ''

      # Increment the Develop tag when branch is merged to Master
      # Develop should be the same version as Master, but keep it's qualifier intact since we're not making any changes to Develop.
      - name: Bump Develop to ${{ steps.get_next_master_version.outputs.next-master-version-tag }}-${{ steps.get_develop_qualifier.outputs.develop-qualifier-tag }}
        if: always()
        run: |
          $MASTER_VERSION="${{ steps.get_next_master_version.outputs.next-master-version-tag }}"
          $QUALIFIER="${{ steps.get_develop_qualifier.outputs.develop-qualifier-tag }}"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git tag -a "$MASTER_VERSION-$QUALIFIER" -m "Updated tag to $MASTER_VERSION-$QUALIFIER" "origin/develop"
          git push --tags

      # Create Bridge Installers.
#      - name: Create Bridge installer
#        run: |
#          $MASTER_VERSION="${{ steps.get_next_master_version.outputs.next-master-version-tag }}"
#          & 'C:\Program Files (x86)\NSIS\makensis.exe' /DMIM_FILENAME="D:\a\pk-bridge\pk-bridge\bridge-build\bridge.zip" /DVERSION_NUMBER="$MASTER_VERSION" /DPRODUCT_VERSION="$MASTER_VERSION" "D:\a\pk-bridge\pk-bridge\installer\bridge\bridge.nsi"
#          mkdir staging

      # Copy zip and exe files. Add version number to .exe file.
      # Then upload them to GitHub.
#      - name: Copy and Upload Bridge zip, exe, and setupexe via Maven
#        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.base_ref == 'master' && github.head_ref == 'develop' }}
#        run: |
#          $MASTER_VERSION="${{ steps.get_next_master_version.outputs.next-master-version-tag }}"
#          copy "D:/a/pk-bridge/pk-bridge/bridge-build/*.zip" staging
#          copy "D:/a/pk-bridge/pk-bridge/installer/bridge/*.exe" staging
#          copy "D:\a\pk-bridge\pk-bridge\installer\bridge\bridgesetup-$MASTER_VERSION.exe" "D:\a\pk-bridge\pk-bridge\staging\bridge.exe"
#          ./mvnw --batch-mode -f "uploadzip.xml" clean deploy -Drevision="$MASTER_VERSION" -s .mvn/wrapper/settings.xml
#          ./mvnw --batch-mode -f "uploadexe.xml" clean deploy -Drevision="$MASTER_VERSION" -s .mvn/wrapper/settings.xml
#          ./mvnw --batch-mode -f "uploadsetupexe.xml" clean deploy -Drevision="$MASTER_VERSION" -s .mvn/wrapper/settings.xml